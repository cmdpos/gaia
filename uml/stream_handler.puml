@startuml




Impl o--> protos.StreamStub
Impl o--> handlerMap
Impl *--> Engine
Peer <|-- Impl
Neighbour <|-- Impl

protos.StreamStub *--> protos.shandlerMap
protos.shandlerMap *--> protos.StreamHandler
protos.StreamHandlerImpl <|-- protos.StreamHandler

Handler *--> ChatStream
Handler o--> Impl
Handler --|> MessageHandler
Handler o--> ledger.Ledger


protos.StreamHandlerImpl <|.. statesync.stateSyncHandler
statesync.stateSyncHandler *--> statesync.syncer
statesync.stateSyncHandler *--> statesync.stateServer
protos.StreamHandler *--> statesync.stateSyncHandler:contains

interface protos.StreamHandlerImpl  {
	Tag() string
	EnableLoss() bool
	NewMessage() proto.Message
	HandleMessage(proto.Message) error
	BeforeSendMessage(proto.Message) error
	OnWriteError(error)
	Stop()
}


protos.StreamHandlerImpl <|.. gossip.stub.GossipHandlerImpl
protos.StreamHandler *--> gossip.stub.GossipHandlerImpl


@enduml






interface BlocksRetriever  {
	RequestBlocks(*pb.SyncBlockRange) (<-chan *pb.SyncBlocks, error)
}

interface StateRetriever  {
	RequestStateSnapshot() (<-chan *pb.SyncStateSnapshot, error)
	RequestStateDeltas(syncBlockRange *pb.SyncBlockRange)
}

Handler o--> ledger.Ledger

BlocksRetriever <|-- RemoteLedger
StateRetriever <|-- RemoteLedger

Handler o--> syncStateSnapshotRequestHandler
Handler o--> syncStateDeltasHandler
Handler o--> syncBlocksRequestHandler