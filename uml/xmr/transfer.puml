@startuml
cold_out_wallet -> cold_out_wallet

hot_out_wallet -> in_wallet: 用<txIndex_n>作为input发起转账,此时最大txindex为last

hot_out_wallet -> hot_out_wallet: spent[0->1]\nspentHeight[0->0]



blockchian_network -> blockchian_network: 在区块H, 对txIndex_n打包


hot_out_wallet -> blockchian_network: sync block
hot_out_wallet <-- blockchian_network:

hot_out_wallet -> hot_out_wallet: 收到区块H后，spentHeight[0->H],\n同时收到找零<txIndex_(last+1)>

hot_out_wallet -> hot_out_wallet: <txIndex_(last+1)> info:\nblockHeight=H \nspent=0 \nkeyImageKnown=0

hot_out_wallet -> hot_out_wallet: 区块H+10之前, <txIndex_(last+1)>不能被花费

blockchian_network -> blockchian_network: 在区块H+10, <txIndex_(last+1)>被确认

hot_out_wallet -> hot_out_wallet: 还需要通过cold wallet导入<txIndex_(last+1)>的keyimage:\n1. 显示的调用export/import
hot_out_wallet -> hot_out_wallet: 2. 选择一个keyImageKnown=1的其他tx做一次转账，\n在cold wallet签名的时候会对\n<txIndex_(last+1)>做隐式的export/import


hot_out_wallet -> cold_out_wallet: 导出<txIndex_(last+1)>output

cold_out_wallet -> hot_out_wallet: 导入<txIndex_(last+1)>keyimage\n <txIndex_(last+1)> info:\nkeyImageKnown=1

hot_out_wallet -> hot_out_wallet: <txIndex_(last+1)>的keyImageKnown=1 可以被花费


@enduml
